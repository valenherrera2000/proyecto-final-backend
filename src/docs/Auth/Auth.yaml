paths:
  /api/auth/register:
    post:
      summary: User Registration
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/register'
      responses:
        201:
          description: User registered successfully
        400:
          description: Invalid data.

  /api/auth/login:
    post:
      summary: User Login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/login'
      responses:
        200:
          description: User logged in successfully
        401:
          description: Invalid credentials.

  /api/auth/current:
    get:
      summary: Get currently logged-in user
      tags:
        - Auth
      responses:
        200:
          description: User retrieved successfully
        401:
          description: Unauthorized.

components:
  requestBodies:
    register:
      type: object
      properties:
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        email:
          type: string
          description: User's email address
        password:
          type: string
          description: User's password
        birthdate:
          type: string
          description: User's birthdate (YYYY-MM-DD)
      example:
        first_name: Pedro
        last_name: Pascal
        email: pedropascal@4fantasticos.com
        password: qwerty
        birthdate: 2024-02-15

    login:
      type: object
      properties:
        email:
          type: string
          description: User's email address
        password:
          type: string
          description: User's password
      example:
        email: pedropascal@4fantasticos.com
        password: qwerty
